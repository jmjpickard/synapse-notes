// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Setting {
  id    String @id @default(cuid())
  key   String @unique
  value String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Meeting {
  id           String   @id @default(cuid())
  googleId     String?  @unique // Optional, if synced from Google Calendar
  title        String
  description  String?
  startTime    DateTime
  endTime      DateTime
  location     String?
  participants String? // Could be a JSON string or comma-separated

  notes      Note[]
  transcript Transcript? // A meeting might have one transcript

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Note {
  id        String  @id @default(cuid())
  content   String
  meetingId String
  meeting   Meeting @relation(fields: [meetingId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transcript {
  id        String  @id @default(cuid())
  content   String
  meetingId String  @unique // Each meeting has at most one transcript
  meeting   Meeting @relation(fields: [meetingId], references: [id], onDelete: Cascade)

  summary Summary? // A transcript might have one summary

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Summary {
  id           String     @id @default(cuid())
  content      String
  transcriptId String     @unique // Each transcript has at most one summary
  transcript   Transcript @relation(fields: [transcriptId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
